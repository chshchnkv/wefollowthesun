.card {
  position: relative;
  
  z-index: 1;
  /* 
    z-index: 1 решает проблему со скругленными углами в момент перехода transition, решение взято отсюда: http://stackoverflow.com/questions/20001515/chrome-bug-border-radius-not-clipping-contents-when-combined-with-css-transiti 
  */
  overflow: hidden;
  
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;
  align-content: space-between;
  
  min-height: $card-min-height;
  
  padding: ($card-basis * 2);
  
  font-size: f-base($card-font-base);
  line-height: 1;
  color: $card-text-color;

  border-radius: ($card-basis * 2);

  @media (min-width: $screen-sm) {
    border-radius: $card-basis;
  }
  
  @media (min-width: $screen-md) {
    padding: $card-basis * 3;
    min-height: $card-min-height * 1.5;

    font-size: f-base($card-font-base + ($card-font-step));
  }

  @media (min-width: $screen-lg) {
    font-size: f-base($card-font-base + ($card-font-step * 2));
  }
    
  
  &__header {
    display: block;
    
    flex-basis: 70%;
    order: 1;

    @include generate-link($card-text-color);
    
    .card--trip & {
      flex-basis: 100%;
      order: 3;
    }

    h2 {
      margin: 0 0 $card-basis 0;
      padding: 0;
      
      font-size: 1em;
    }
    
    h3 {
      margin: 0;
      
      font-size: 0.8em;
      font-weight: normal;
    }
  }
  

  &__bg {
    position: absolute;
    z-index: -1;
    
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    
    transition-property: filter, transform;
    transition-duration: 0.3s;
    transition-timing-function: linear, ease-out;
    
    @include transition-clipping-fix;
    
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;

      display: block;
      width: 100%;
      height: 100%;

      @include bg-gradient;
      transition: opacity 0.3s linear;
      @include transition-clipping-fix;
    }
  }


  &:hover &__bg {
    transform: scale(1.2);
    filter: saturate(150%) blur(3px);
    
    &:after {
      opacity: 0.75;
    }
  }
  
  
  &__meta {
    position: relative;
    z-index: 1;
    
    order: 2;
  
    max-width: 30%;
    
    margin-top: -$card-basis;
    margin-right: -$card-basis;
    margin-bottom: ($card-basis * 2);
  }
  
  
  &__authors {
    @include make-row($card-basis * 2);

    &:before, &:after {
      content: none;
    }

    display: flex;
    flex-wrap: wrap;
    flex-basis: 100%;
    flex-grow: 1;
    order: 3;

    .card--trip & {
      flex-basis: 70%;
      flex-grow: 0;
      order: 1;
    }
/*
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    flex-basis: 100%;
    flex-grow: 1;
    order: 3;
    
    margin-left: -$card-basis;
    margin-right: -$card-basis;
    margin-bottom: -$card-basis;
    
    
    .card--trip & {
      flex-basis: 70%;
      flex-grow: 0;
      order: 1;
    }*/
  }
  
  
  &__author {
    @include make-xs-column(2, $gutter: ($card-basis * 2));
    
    padding-top: $card-basis;
    padding-bottom: $card-basis;
    
    @media (min-width: $screen-sm) {
//      @include make-xs-column(3, $gutter: $card-padding);
    }
    
    .card--trip & {
      @include make-xs-column(4, $gutter: ($card-basis * 2));

      @media (min-width: $screen-sm) {
        @include make-xs-column(6, $gutter: ($card-basis * 2));
      }
    }
    
/*    flex-basis: ($card-basis * 7);
    max-width: ($card-basis * 7);
    margin: $card-basis;
    
    @media (min-width: $screen-md) {
      flex-basis: ($card-basis * 10);
      max-width: ($card-basis * 10);
    }

    
    .card--trip & {
      flex-basis: ($card-basis * 15);
      max-width: ($card-basis * 15);      

      @media (min-width: $screen-md) {
        flex-basis: ($card-basis * 20);
        max-width: ($card-basis * 20);
      }
    }*/
  }
}