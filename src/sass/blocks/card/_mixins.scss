@mixin make-card (
          $card-class-name: "card",
          $card-min-height: 150px, 
          $card-basis: 5px,
          $card-text-color: $color-text-light,
          $card-font-base: 1rem,
          $card-border-radius: $card-basis * 2,
          $card-bg-animation: true,
          $card-bg-hover-transform: scale(1.2),
          $card-bg-initial-blur: 0,
          $card-bg-hover-filter: saturate(150%) blur(3px),
          $card-authors-adaptive: false,
          $card-padding-top: $card-basis * 2,
          $card-padding-right: $card-basis * 2,
          $card-padding-bottom: $card-basis * 2,
          $card-padding-left: $card-basis * 2
) {

  .#{$card-class-name} {

    position: relative;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: flex-start;
    align-content: space-between;
    

    z-index: 1;
    /* 
      z-index: 1 решает проблему со скругленными углами в момент перехода transition, решение взято отсюда: http://stackoverflow.com/questions/20001515/chrome-bug-border-radius-not-clipping-contents-when-combined-with-css-transiti 
    */
    overflow: hidden;

    min-height: $card-min-height;

    padding-top: $card-padding-top;
    padding-right: $card-padding-right;
    padding-bottom: $card-padding-bottom;
    padding-left: $card-padding-left;

    font-size: $card-font-base;
    line-height: 1;
    color: $card-text-color;

    border-radius: $card-border-radius;

    @media (min-width: $screen-sm) {
      padding-top: $card-padding-top * 1.1;
      padding-right: $card-padding-right * 1.1;
      padding-bottom: $card-padding-bottom * 1.1;
      padding-left: $card-padding-left * 1.1;

      border-radius: ($card-border-radius/2);
    }

    @media (min-width: $screen-md) {
      padding-top: $card-padding-top * 1.25;
      padding-right: $card-padding-right * 1.25;
      padding-bottom: $card-padding-bottom * 1.25;
      padding-left: $card-padding-left * 1.25;
      
      @if (unit($card-min-height) != "vh") {
        min-height: $card-min-height * 1.5;
      }

      font-size: ($card-font-base * 1.1);
    }

    @media (min-width: $screen-lg) {
      font-size: ($card-font-base * 1.2);
    }
  }
  
  
  .#{$card-class-name}__container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: flex-start;
    align-content: space-between;
    
    @include outline($color: cyan, $size: 3px);
  }
  
  
  .#{$card-class-name}__header {
    display: block;
    max-width: 70%;

    order: 1;
    
    @include generate-link($card-text-color);

    .#{$card-class-name}--reverse & {
      max-width: 100%;
      flex-basis: 100%;
      order: 3;
    }

    h2 {
      margin: 0 0 0.25em 0;
      padding: 0;

      font-size: 2em;
    }

    h3 {
      margin: 0 0 0.25em 0;

      font-size: 1.6em;
      font-weight: normal;
    }
    
    h4 {
      margin: 0 0 0.25em 0;
      
      font-size: 1.1em;
      font-weight: normal;
    }
  }

  
  .#{$card-class-name}__bg {
    @include bg-image;
    @include transition-clipping-fix;
    
    @if (unitless($card-bg-initial-blur) == false) {
      filter: blur($card-bg-initial-blur);
    }
    
    transition-property: filter, transform;
    transition-duration: 0.3s;
    transition-timing-function: linear, ease-out;
  }


  @if ($card-bg-animation == true) {
    .#{$card-class-name}:hover .#{$card-class-name}__bg {
      filter: $card-bg-hover-filter;
      transform: $card-bg-hover-transform;

      &:after {
        opacity: 0.75;
      }
    }    
  }


  .#{$card-class-name}__meta {
    position: relative;
    z-index: 1;
    
    order: 2;
  
    max-width: 30%;
    
    margin-top: -$card-basis;
    margin-right: -$card-basis;
    margin-bottom: ($card-basis * 2);
    
    font-size: 2em;
  }
  
  
  .#{$card-class-name}__authors {
    @include make-row($card-basis * 2);
    order: 3;
    flex-grow: 1;

    .#{$card-class-name}--reverse & {
      flex-basis: 25%;
      flex-grow: 0;
      order: 1;
    }
  }
  
  
  .#{$card-class-name}__author {
    @include make-xs-column(2, $gutter: ($card-basis * 2));
    
    @if ($card-authors-adaptive == true)
    {
      @include make-md-column(1, $gutter: ($card-basis * 2));
    }
    
    padding-top: $card-basis;
    padding-bottom: $card-basis;
    
    .#{$card-class-name}--reverse & {
      @include make-xs-column(12, $gutter: ($card-basis * 2));
    }
  }
  
  
  .#{$card-class-name}__inner-cards {
    order: 4;
  }
}